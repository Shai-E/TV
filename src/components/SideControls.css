/* NumberKeyboard.css */
.controls-bar.keyboard.no-events {
    position: relative;
  }
  
  .expand.remote-button,
  .expand-channels.channels-button {
    cursor: pointer;
  }
  
  .keyboard-container {
    /* position: absolute; */
  }
  
  .keyboard-content {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    width: 250px;
    justify-content: space-around;
    padding: 10px;
  }
  
  .button {
    padding: 15px 25px;
    height: 60px;
    width: 60px;
    display: flex;
    justify-content: center;
    align-items: center;
    overflow: hidden;
    font-size: 18px;
    cursor: pointer;
    margin: 5px;
    border-radius: 50%;
    border: 1px solid #ccc;
    background-color: white;
    position: relative;
  }
  
  .vid-size-slider-container {
    /* position: fixed; */
    /* top: 13px; */
    /* left: 50%; */
    /* transform: translateX(-50%); */
  }
  
  .channel-button {
    background-size: contain;
    background-position: center;
    background-repeat: no-repeat;
    z-index: 101;
    position: relative;
    border-radius: 0;
  }

  .channels-container {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    width: 100%;
    justify-content: center;

  }
  
  .controls-bar {
    display: flex;
    justify-content: space-between;
    padding: 10px;
    width: 100vw;
    height: 0px;
    box-sizing: border-box;
  }

  .side-controls-bar {
    transition: translate var(--animation-timing);
    translate: -104%;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    
    background: linear-gradient(217deg, rgba(255,0,0,.8), rgba(255,0,0,0) 70.71%),
    linear-gradient(127deg, rgba(0,255,0,.8), rgba(0,255,0,0) 70.71%),
    linear-gradient(336deg, rgba(0,0,255,.8), rgba(0,0,255,0) 70.71%);
    border-radius: 15px;
    backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(10px);
    background-color: rgba(255, 255, 255, 0.1);
    border: 1px solid rgba(255, 255, 255, 0.2);
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    margin: 10px;

    padding: 10px;
    padding-top: var(--hamburger-height);
    position:fixed;
    height: calc(100vh - 20px);
    box-sizing: border-box;
    z-index: 100;
    width: 295px;
  }

  .hamburger-menu:not(:has(input:checked)):hover + .side-controls-bar {
    transition: translate var(--animation-timing);
    translate: -100%;
  }

  .hamburger-menu:has(input:checked) + .side-controls-bar {
    translate: 0;
  }

  .channels-hidden {
    display:none;
  }
  
  .channels-visible {
    display: flex;
  }

  input[type="range"] {
    -webkit-appearance: none;
    width: 100%;
    height: 3px;
    background: #000000;
    margin: 10px 0;
  }

  input[type="range"]::-webkit-slider-thumb {
    -webkit-appearance: none; /* Override default look */
    background-color: #000000;
    height: 1rem;
    width: 2px; 
  }

/* __________________________________ */

:root {
    --bar-width: 40px;
    --bar-height: 8px;
    --hamburger-gap: 6px;
    --hamburger-margin: 5px;
    --hamburger-color: #333;
    --animation-timing: 200ms ease-in-out;
    --hamburger-height: calc(var(--bar-height) * 3 + var(--hamburger-gap) * 2);
}

.hamburger-menu {
    --x-width: calc(var(--hamburger-height) * 1.41);
    display: flex;
    flex-direction: column;
    gap: var(--hamburger-gap);
    width: max-content;
    z-index: 300;
    position: fixed;
    top: var(--hamburger-margin);
    left: var(--hamburger-margin);
    cursor: pointer;
}

.hamburger-menu::before, .hamburger-menu::after, .hamburger-menu input {
    box-sizing: border-box;
    content: '';
    width: var(--bar-width);
    height: var(--bar-height);
    background-color: var(--hamburger-color);
    border-radius: 9999px;
    transition: opacity var(--animation-timing), width var(--animation-timing), rotate var(--animation-timing), translate var(--animation-timing);
    transform-origin: left center;
    border: 1px solid white;
}

.hamburger-menu:has(input:checked)::before {
    rotate: 45deg;
    width: var(--x-width);
    translate: 0 calc(var(--bar-height) / -2);
}

.hamburger-menu:has(input:checked)::after {
    rotate: -45deg;
    width: var(--x-width);
    translate: 0 calc(var(--bar-height) / 2);

}

.hamburger-menu input {
    appearance: none;
    padding: 0;
    margin: 0;
    outline: none;
    pointer-events: none;
}

.hamburger-menu input:checked {
    opacity: 0;
    width: 0;
}